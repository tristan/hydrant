################################################## 
# WorkflowServiceImplService_services.py 
# generated by ZSI.generate.wsdl2python
##################################################


from WorkflowServiceImplService_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI

# Locator
class WorkflowServiceImplServiceLocator:
    WorkflowService_address = "http://kepler.hpc:9000/testing"
    def getWorkflowServiceAddress(self):
        return WorkflowServiceImplServiceLocator.WorkflowService_address
    def getWorkflowService(self, url=None, **kw):
        return WorkflowServiceImplServiceSoapBindingSOAP(url or WorkflowServiceImplServiceLocator.WorkflowService_address, **kw)

# Methods
class WorkflowServiceImplServiceSoapBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: getWorkflows
    def getWorkflows(self, request):
        if isinstance(request, getWorkflows) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(getWorkflowsResponse.typecode)
        return response

getWorkflows = ns1.getWorkflows_Dec().pyclass

getWorkflowsResponse = ns1.getWorkflowsResponse_Dec().pyclass
